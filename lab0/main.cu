#include <cstdio>
#include <cstdlib>
#include "SyncedMemory.h"

#define CHECK {\
	auto e = cudaDeviceSynchronize();\
	if (e != cudaSuccess) {\
		printf("At " __FILE__ ":%d, %s\n", __LINE__, cudaGetErrorString(e));\
		abort();\
	}\
}

const int W = 121;
const int H = 34;

__global__ void Draw(char *frame) {
	const int y = blockIdx.y * blockDim.y + threadIdx.y;
	const int x = blockIdx.x * blockDim.x + threadIdx.x;
	const unsigned char * umi = "DDDDDD3D\xb4KD\4\x9d\xaaKADDDD\4@D\x8c\rDD;D433333\3\xbb\xbb\0\0\0\0\0\0""3334\3\0\0\0\0\0\0\0\0\0\0\13N4CCCD4D\xb4=D4\x8dj\xd6""DDDDDD\xc3""D\xd4\x86\rD\4\rDD3333C\4\xbb\13\0\0\0\0\0""033D3\0\0\0\0\0\0\0\0\0\0\0\xe0""44CD\24""DD\xb4\xdd""D4\x8d""ffHCDDDD4MDm\x86=D\x93\rDDDCC3C\3\xbb\xbb\13\0\0\0\0""33CD\3\0\0\0\0\0\0\0\0\0\0\0N4DD\24""DD\xb4\x9dID\xad""f\x98\xa9@@DDDD\x90""C\xc4j\xa6M4\x9a\rDDDDD3C\3\xbb\xbb\xbb\0\0\0""033D4\0\0\0\0\0\0\0\0\0\0\0\xe0""DDDDAD4\x8d\x9a""D\x8c\xd9\xdcj\x96\xb4""CDDD\xb4\10""D\xd9\xdc\x89K\xa3\x8a=DDDDD4D\xb3\xbb\xbb\xbb\13\0\0""33CD\3\0\0\0\0\0\0\0\0\0\0\0NDDD\24""AD\x9c\xaaM\x93\x89\xaa""ff:\xc0""DDDD\xad@\xa0\xa6\x8a\xd9\4\xaa\x8a=DDDDDDD\xb0\xbb\xbb\xbb\xbb\13\0\0""3D4\0\0\0\0\0\0\0\0\0\0\0\xe0""DDD\24\22""D\x8b\xaa\x9a\x94\xaa\xaa\xaa\x88\x99L\xb9""DDD\xa4\6\xb4\x89\xaa\xaa:\xad\xaa\x8aLDDDDDD4\xbb\xbb\xbb\xbb\xbb\13\0\0""CD\3\0\0\0\0\0\0\0\0\0\0\0ND\24\21!\21\x83""f\xa6""8\xd9\xbd""03\x90\x88\xcb""8DD\4\xa6""0\x99\xd9\xcc\xdd\x8b\xaa""f\x86@D\24""DDDD\4\xbb\xbb\xbb\xbb\xbb\0\0""0D4\0\0\0\0\0\0\0\0\0\0\0\xe0\21\21\21\21\"\xd4\xaa\x8a\rA\3\xbb\xccK\x83\xaa\xa0IDDm8<1\0""3\23\xb4\xa9""f\xda""DD\21""DDDD\xb3\xbb\xbb\xbb\xbb\13\0\0""3D\3\xb0\13\0\0\0\0\0\0\0\0\0\36\21\21\21!2\x8a\xd8$\xb3\x9d\x88\r\xd0\x99\x9c\x9a\xadLD\xa3\xc6\xdc\x9d\x88=4\xcb#\x94j:D\24""ADD4D\xbb\xbb\xbb\xbb\xbb\0\0""0D4\xb0\xbb\xbb\xbb\xbb\xbb\13\0\0\0\0\xe0\21\21\21\21\"\xac\xb8""B\x9c\xd9Z\x85""D\x91""f\xaa\x96\xa8""C\xd4\x86\xa9jheL\24\x9d\34\x91jLD\21""DD4@\xb4\xbb\xbb\xbb\xbb\13\0\0""04\xb3\xbb\xbb\xbb\xbb\xbb\xbb\xbb\xbb\xbb\xb0\0\36\21\21\21!\x82\n7\x9dh\xbb\xbd!Ckff\x86\xca\4\xaajf\6\xd0#1\xc4\x86\35\xa3\xd6""D\24""ADD\3""D\xbb\xbb\xbb\xbb\xbb\0\0\0""3\3\xbb\xbb\xbb\xbb\xbb\xbb\xbb\xbb\xbb\xbb\xbb\xeb\21\21\21\21\21\nG\x9dZ\xd5\4\xcc\xdc\xd3""eff\xa6""8iffV=\xdc\xcb;Z\x86pmIDADD\4@\xb4\xbb\xbb\xbb\xbb\13\0\0""03\xb0\xbb\xbb\xbb\xbb\xbb\xbb\xbb\xbb\xbb\xbb\xbb\36\21\21\21\21\x94r\x9bZU\x86\xcb\xdd\x9cVfff\xa6lfffe\xc9\xcc\xdcZU\xc6""7\x96""D\24""DDD\13""4\xbb\xbb\xbb\xbb\xbb\13\0\0""3\3\xbb\xbb\xbb\xbb\xbb\xbb\xbb\xbb\xbb\xbb\xbb\xeb\21\21\21\21""A\xba\7iUUUffeffff\xaa""ffffVefUUeK\xacMDDDD\xc0@\xc0\xcc\xcc\xcc\xcc\xbc\0\0""03\xb0\xcb\xcc\xbb\xbb\xbb\xbb\xbb\xbb\xbb\xbb\xbb\36\21\21\21\21\xa4\xda\xc3VUUf\xa6\x88jffffffff\x86\xa8""fVUe\x9a\xaa\xb6""DDDD\xc3<\xc3\xcc\xcc\xcc\xcc\xcc\xbb\xbb\13""3\3\xcb\xcc\xcc\xcc\xcc\xbb\xbb\xbb\xbb\xbb\xbb\xeb\24\21\21\21""D\xac\xa6\x88\xaa""f\xa6\xaa\xaa""fffffffhff\xa6\x8ahf\xa6\x8a""f\xa6""CDDD\xb4\xbc\xb4\xcc\xcc\xcc\xcc\xcc\xbc\xbb\xbb""03\xc0\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xbb\xbb\xbb\xbb\xde\23\21\21""DDif\xaajffffffffff\xa6""ffffffffjfM0DD\xb4\xcc\3\xcc\xcc\xcc\xcc\xcc\xcc\xbb\xbb\xbb""3\3\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xbc\xbb\xbb\xeb\xd0\23\21""DD4hfffffffffffffffffffffff\n\xbb""DD\4\xcc\0\xcc\xcc\xcc\xcc\xcc\xcc\xbc\xbb\xbb\13""3\xc0\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xbb\xbb\xbe\xcb""CDDD\4jffffffff\xaa\xaa""ffffffffffff\xca\xdc""CD\xb3\xcc\xbb\xdc\xdc\xdd\xdd\xdd\xdd\xcd\xbc\xbb\xbb\0\xb0\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xec\xb9\x9cLDDD\4jffffff\xa6\xcd\x89\x88\x88\x88\x88\xc9hffffff\x9a\x98""CD\xc3\xdd\xcc\xdd\xdd\xdd\xdd\xdd\xdd\xdd\xcd\xbb\xbb\13\0\xcb\xdd\xcd\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xae\x9a\xdd\tDDD\4hfffff\x96\23\21""4333DAifffff\x8a\x9a""C4\xdb\xdd\xcc\xdd\xdd\xdd\xdd\xdd\xdd\xdd\xdd\xcc\xdd\xdd\xbb\xb0\xdc\xdd\xdd\xdd\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xecj\xca\x9c\xc8""C\3""C\4iffff\x96\24\21\21\21\21\21\21\21""Aiffff\xaa\xda""3\xb3\xdd\xdd\xdc\xdd\xdd\xdd\xdd\xdd\xdd\xdd\xdd\xcdmf\xa6\x8a\x88\xd9\xdd\xdd\xdd\xdd\xcc\xcc\xcc\xcc\xcc\xcc\xde\xaa\xd8\xdc\x89<\xb3\14""3\xac""fff\x86""CDDDDD\21\21\21""1jfff\xa6\xc8\xdb\xdd\xdd\xdd\xdd\xdd\xdd\xdd\xdd\xdd\xdd\xdd\xdd\xdd\x8c""ejf\xaa""ff\xaa\x98\xd9\xdd\xcd\xcc\xcc\xcc\xcc\xec""4\xdb\x98\xdd\xaa\xd8\xbc\x9d\xd9\x9djff\14\xbb\xbb\xbb\xbb\xbb\xbb""0\24\21\x91""fff\xa6\x88j\xda\xdd\xdd\xdd\xdd\xdd\xdd\xdd\xdd\xdd\xdd\xdd\xdd\xdd""fjf\xaa\x8a\xaa""f\xaa""ff\xaa\x88\xd9\xdd\xcc\xccND4\x8c\xa8\xd9\x88\x88\x99\xa8\xaa""ff\xca\xdc\xdd\xdd\xdd\xdd\xdd\xdd\xddK\21lfffff\xda\xdd\xdd\xdd\xdd\xdd\xdd\xdd\xdd\xdd\xdd\xdd\xdd\xddX\xa6\xa6\xa6\xaa\xaa""f\xaa\x88\xaa""f\xa6""ff\xaa\x98\xec""DDD4\23\1\xa9\xaaj\xaa\xaa""f\xa6\xdc\xdd\xdd\xdd\xdd\xdd\xdd\xdd\xdd=\xc3""fffff\xb8\x9d\x99\x99\xd9\xd9\xdd\xdd\xd9\xdd\xdd\xdd\xdd\xddmf\xa6\xaa""ff\xa6\xa6\x8a\xaaj\xa6\x88\xa8\xa6\xa6\x86NDD\24\"\"\22\x9bjffff\xca\xdd\xdd\xdd\xdd\xdd\xdd\xdd\xdd\xdd\x9cifff\xa6=\x9d\x99\x99\x99\x99\x99\x99\x99\x99\xd9\xdd\xdd\xdd\x8d""fjj\xaaj\xaa\xaajjjj\x8a\xa8j\xa6j\xe9\24""DD$\"\"\"\xc4\xa8""ffff\xd8\xdd\xdd\xdd\xdd\xdd\xdd\xdd\xdd\x8d\xa8""fff\x9a""0\x90\x99\x99\x99\x99\x99\x99\x99\x99\xd9\xdd\xd9\xdd\xdd""f\xaa""f\xaa\x8a\xaa""f\xaa\xaa\xa6\xa8jjjjj\xc6NDDD!\"\"\"\xc4\x9d\xa8""fff\x88\xd8\xdd\xdd\xdd\xdd\xdd\xdd\x89\xaa""ff\x8a\14""D\xd4\x99\x99\x99\x99\x99\x99\x99\x99\x99\xdd\xdd\xdd\xddh\xa6\xa6\x86\xa8\xa8""f\xaa\x88\xaa\xa6\xa6\xaa\xa6\xaaj\x96\xec""DDD\24\"\"\"\"\xd3\xdd\x9d\xaa""ff\x8a\xa8\x8a\x88\x88\x88\xaa\xaajf\x8a\rAD\4\x99\x99\x99\x99\x99\x99\x99\x99\x99\x99\xdd\xdd\xddm\xa6\x8a\xaa\xa6\xa6\xa6\xa6\x8a\x88j\xa6\x88\x88\xa6\xa6""f\xdcNADD!\"\"\"\22\xdc\xdd\xdd\x9d\xa8""f\xa6\xaa\xa6\xaa\xaa\xaa\xaa\xa6\x8a<!\"DD\x9b\x99\x99\x99\x99\x99\x99\x99\x99\x99\x9d\xd9\xdd\x9d""fjjjj\xaa\xa8jjjj\x88\x88j\xa6j\xd9\xed\21""DD\24\"\"\"\"B\xdd\xdd\xdd\xdd\xdd\x89\xaa""ffff\xa6\xd8@!\"\"BD\xc4\x99\x99\x99\x99\x99\x99\x99\x99\x99\xd9\xdd\xdd\xdd""f\xaa""f\xaa\xa8j\xaajj\xa6\xa8j\xaajjh\xc6\xdd\36\21\21\21\"\"\"\"\"\xc2\xdd\xdd\xdd\xdd\xdd\xdd\xdd\x99\x88\x88\r\24\"\"\"\"\"DD\x9d\x99\x99\x99\x99\x99\x99\x99\x99\xdd\xdd\xdd\xddi\xa6""f\xa6\x88\xa8j\xaa\x88\xaa\xa6\xa6\xaa\xa6\xaaj\x86\xdd\xfd";
	const char * map = "+-./:MN`dhmosy\n";
	if (y < H and x < W) {
		size_t idx = y * W + x;
		frame[idx] = idx % 2 ? map[umi[idx/2] >> 4] : map[umi[idx/2] & 15];
	}
}

int main(int argc, char **argv)
{
	MemoryBuffer<char> frame(W*H);
	auto frame_smem = frame.CreateSync(W*H);
	CHECK;

	Draw<<<dim3((W-1)/16+1,(H-1)/12+1), dim3(16,12)>>>(frame_smem.get_gpu_wo());
	CHECK;

	puts(frame_smem.get_cpu_ro());
	CHECK;
	return 0;
}
